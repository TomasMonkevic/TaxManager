// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxManager.Persistence;

namespace TaxManager.Persistence.Migrations
{
    [DbContext(typeof(TaxManagerContext))]
    [Migration("20201024073020_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("TaxManager.Domain.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manucipalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vilnius"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oslo"
                        });
                });

            modelBuilder.Entity("TaxManager.Domain.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<int>("TaxType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            From = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = 1,
                            Rate = 0.40000000000000002,
                            TaxType = 0
                        },
                        new
                        {
                            Id = 2,
                            From = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = 1,
                            Rate = 0.20000000000000001,
                            TaxType = 3,
                            To = new DateTime(2016, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            From = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = 2,
                            Rate = 0.20000000000000001,
                            TaxType = 3,
                            To = new DateTime(2016, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TaxManager.Domain.Tax", b =>
                {
                    b.HasOne("TaxManager.Domain.Municipality", "Municipality")
                        .WithMany("Taxes")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
